/*******************************************************************************
 * Copyright (c) 2018, College of William & Mary
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the College of William & Mary nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COLLEGE OF WILLIAM & MARY BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * PRIMME: https://github.com/primme/primme
 * Contact: Andreas Stathopoulos, a n d r e a s _at_ c s . w m . e d u
 *******************************************************************************
 *   NOTE: THIS FILE IS AUTOMATICALLY GENERATED. PLEASE DON'T MODIFY
 ******************************************************************************/


#ifndef restart_H
#define restart_H
int restart_hprimme(dummy_type_hprimme *V, dummy_type_hprimme *W, dummy_type_hprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_hprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_hprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_hprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_sprimme *M, int ldM, dummy_type_sprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_sprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_sprimme *H, int ldH, dummy_type_sprimme *VtBV, int ldVtBV,
      dummy_type_hprimme *Q, PRIMME_INT ldQ, dummy_type_sprimme *R, int ldR, dummy_type_sprimme *QtV, int ldQtV,
      dummy_type_sprimme *QtQ, int ldQtQ, dummy_type_sprimme *hU, int ldhU, int newldhU,
      dummy_type_sprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_sprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_hprimme(dummy_type_hprimme *V, dummy_type_hprimme *W, dummy_type_hprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_sprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_hprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_hprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_hprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_hprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_hprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_hprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_hprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_hprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_sprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_sprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_kprimme(dummy_type_kprimme *V, dummy_type_kprimme *W, dummy_type_kprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_kprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_kprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_kprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_cprimme *M, int ldM, dummy_type_cprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_cprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_cprimme *H, int ldH, dummy_type_cprimme *VtBV, int ldVtBV,
      dummy_type_kprimme *Q, PRIMME_INT ldQ, dummy_type_cprimme *R, int ldR, dummy_type_cprimme *QtV, int ldQtV,
      dummy_type_cprimme *QtQ, int ldQtQ, dummy_type_cprimme *hU, int ldhU, int newldhU,
      dummy_type_cprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_cprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_kprimme(dummy_type_kprimme *V, dummy_type_kprimme *W, dummy_type_kprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_cprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_kprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_kprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_kprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_kprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_kprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_kprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_kprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_kprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_cprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_cprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_sprimme(dummy_type_sprimme *V, dummy_type_sprimme *W, dummy_type_sprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_sprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_sprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_sprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_sprimme *M, int ldM, dummy_type_sprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_sprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_sprimme *H, int ldH, dummy_type_sprimme *VtBV, int ldVtBV,
      dummy_type_sprimme *Q, PRIMME_INT ldQ, dummy_type_sprimme *R, int ldR, dummy_type_sprimme *QtV, int ldQtV,
      dummy_type_sprimme *QtQ, int ldQtQ, dummy_type_sprimme *hU, int ldhU, int newldhU,
      dummy_type_sprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_sprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_sprimme(dummy_type_sprimme *V, dummy_type_sprimme *W, dummy_type_sprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_sprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_sprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_sprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_sprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_sprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_sprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_sprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_sprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_sprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_sprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_sprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_cprimme(dummy_type_cprimme *V, dummy_type_cprimme *W, dummy_type_cprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_cprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_cprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_cprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_cprimme *M, int ldM, dummy_type_cprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_cprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_cprimme *H, int ldH, dummy_type_cprimme *VtBV, int ldVtBV,
      dummy_type_cprimme *Q, PRIMME_INT ldQ, dummy_type_cprimme *R, int ldR, dummy_type_cprimme *QtV, int ldQtV,
      dummy_type_cprimme *QtQ, int ldQtQ, dummy_type_cprimme *hU, int ldhU, int newldhU,
      dummy_type_cprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_cprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_cprimme(dummy_type_cprimme *V, dummy_type_cprimme *W, dummy_type_cprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_cprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_cprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_cprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_cprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_cprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_cprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_cprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_cprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_cprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_cprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_cprimme *H, int nH, int ldH,
   primme_context ctx);
#if !defined(CHECK_TEMPLATE) && !defined(restart_Sprimme)
#  define restart_Sprimme CONCAT(restart_,SCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(restart_Rprimme)
#  define restart_Rprimme CONCAT(restart_,REAL_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(restart_SHprimme)
#  define restart_SHprimme CONCAT(restart_,HOST_SCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(restart_RHprimme)
#  define restart_RHprimme CONCAT(restart_,HOST_REAL_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(restart_SXprimme)
#  define restart_SXprimme CONCAT(restart_,XSCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(restart_RXprimme)
#  define restart_RXprimme CONCAT(restart_,XREAL_SUF)
#endif
int restart_dprimme(dummy_type_dprimme *V, dummy_type_dprimme *W, dummy_type_dprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_dprimme *hVals, dummy_type_dprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_dprimme *blockNorms, dummy_type_dprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_dprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_dprimme *evals, dummy_type_dprimme *resNorms, dummy_type_dprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_dprimme *M, int ldM, dummy_type_dprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_dprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_dprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_dprimme *H, int ldH, dummy_type_dprimme *VtBV, int ldVtBV,
      dummy_type_dprimme *Q, PRIMME_INT ldQ, dummy_type_dprimme *R, int ldR, dummy_type_dprimme *QtV, int ldQtV,
      dummy_type_dprimme *QtQ, int ldQtQ, dummy_type_dprimme *hU, int ldhU, int newldhU,
      dummy_type_dprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_dprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_Sprimme)
#  define Num_aux_update_VWXR_Sprimme CONCAT(Num_aux_update_VWXR_,SCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_Rprimme)
#  define Num_aux_update_VWXR_Rprimme CONCAT(Num_aux_update_VWXR_,REAL_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_SHprimme)
#  define Num_aux_update_VWXR_SHprimme CONCAT(Num_aux_update_VWXR_,HOST_SCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_RHprimme)
#  define Num_aux_update_VWXR_RHprimme CONCAT(Num_aux_update_VWXR_,HOST_REAL_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_SXprimme)
#  define Num_aux_update_VWXR_SXprimme CONCAT(Num_aux_update_VWXR_,XSCALAR_SUF)
#endif
#if !defined(CHECK_TEMPLATE) && !defined(Num_aux_update_VWXR_RXprimme)
#  define Num_aux_update_VWXR_RXprimme CONCAT(Num_aux_update_VWXR_,XREAL_SUF)
#endif
int Num_aux_update_VWXR_dprimme(dummy_type_dprimme *V, dummy_type_dprimme *W, dummy_type_dprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_dprimme *h, int nh, int ldh, dummy_type_dprimme *hVals,
   dummy_type_dprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_dprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_dprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_dprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_dprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_dprimme *Rnorms,
   dummy_type_dprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_dprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_dprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_dprimme *rnorms, int nrb, int nre,
   dummy_type_dprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_dprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_zprimme(dummy_type_zprimme *V, dummy_type_zprimme *W, dummy_type_zprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_dprimme *hVals, dummy_type_dprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_dprimme *blockNorms, dummy_type_zprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_zprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_dprimme *evals, dummy_type_dprimme *resNorms, dummy_type_zprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_zprimme *M, int ldM, dummy_type_zprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_zprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_dprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_zprimme *H, int ldH, dummy_type_zprimme *VtBV, int ldVtBV,
      dummy_type_zprimme *Q, PRIMME_INT ldQ, dummy_type_zprimme *R, int ldR, dummy_type_zprimme *QtV, int ldQtV,
      dummy_type_zprimme *QtQ, int ldQtQ, dummy_type_zprimme *hU, int ldhU, int newldhU,
      dummy_type_zprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_zprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_zprimme(dummy_type_zprimme *V, dummy_type_zprimme *W, dummy_type_zprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_zprimme *h, int nh, int ldh, dummy_type_dprimme *hVals,
   dummy_type_zprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_zprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_zprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_zprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_zprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_dprimme *Rnorms,
   dummy_type_zprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_zprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_zprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_dprimme *rnorms, int nrb, int nre,
   dummy_type_zprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_zprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_magma_sprimme(dummy_type_magma_sprimme *V, dummy_type_magma_sprimme *W, dummy_type_magma_sprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_magma_sprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_magma_sprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_magma_sprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_sprimme *M, int ldM, dummy_type_sprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_sprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_sprimme *H, int ldH, dummy_type_sprimme *VtBV, int ldVtBV,
      dummy_type_magma_sprimme *Q, PRIMME_INT ldQ, dummy_type_sprimme *R, int ldR, dummy_type_sprimme *QtV, int ldQtV,
      dummy_type_sprimme *QtQ, int ldQtQ, dummy_type_sprimme *hU, int ldhU, int newldhU,
      dummy_type_sprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_sprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_magma_sprimme(dummy_type_magma_sprimme *V, dummy_type_magma_sprimme *W, dummy_type_magma_sprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_sprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_magma_sprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_magma_sprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_magma_sprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_magma_sprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_magma_sprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_magma_sprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_magma_sprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_magma_sprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_sprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_sprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_magma_cprimme(dummy_type_magma_cprimme *V, dummy_type_magma_cprimme *W, dummy_type_magma_cprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_sprimme *hVals, dummy_type_sprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_sprimme *blockNorms, dummy_type_magma_cprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_magma_cprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_sprimme *evals, dummy_type_sprimme *resNorms, dummy_type_magma_cprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_cprimme *M, int ldM, dummy_type_cprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_cprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_sprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_cprimme *H, int ldH, dummy_type_cprimme *VtBV, int ldVtBV,
      dummy_type_magma_cprimme *Q, PRIMME_INT ldQ, dummy_type_cprimme *R, int ldR, dummy_type_cprimme *QtV, int ldQtV,
      dummy_type_cprimme *QtQ, int ldQtQ, dummy_type_cprimme *hU, int ldhU, int newldhU,
      dummy_type_cprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_cprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_magma_cprimme(dummy_type_magma_cprimme *V, dummy_type_magma_cprimme *W, dummy_type_magma_cprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_cprimme *h, int nh, int ldh, dummy_type_sprimme *hVals,
   dummy_type_magma_cprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_magma_cprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_magma_cprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_magma_cprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_magma_cprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_sprimme *Rnorms,
   dummy_type_magma_cprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_magma_cprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_magma_cprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_sprimme *rnorms, int nrb, int nre,
   dummy_type_cprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_cprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_magma_dprimme(dummy_type_magma_dprimme *V, dummy_type_magma_dprimme *W, dummy_type_magma_dprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_dprimme *hVals, dummy_type_dprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_dprimme *blockNorms, dummy_type_magma_dprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_magma_dprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_dprimme *evals, dummy_type_dprimme *resNorms, dummy_type_magma_dprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_dprimme *M, int ldM, dummy_type_dprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_dprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_dprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_dprimme *H, int ldH, dummy_type_dprimme *VtBV, int ldVtBV,
      dummy_type_magma_dprimme *Q, PRIMME_INT ldQ, dummy_type_dprimme *R, int ldR, dummy_type_dprimme *QtV, int ldQtV,
      dummy_type_dprimme *QtQ, int ldQtQ, dummy_type_dprimme *hU, int ldhU, int newldhU,
      dummy_type_dprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_dprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_magma_dprimme(dummy_type_magma_dprimme *V, dummy_type_magma_dprimme *W, dummy_type_magma_dprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_dprimme *h, int nh, int ldh, dummy_type_dprimme *hVals,
   dummy_type_magma_dprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_magma_dprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_magma_dprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_magma_dprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_magma_dprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_dprimme *Rnorms,
   dummy_type_magma_dprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_magma_dprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_magma_dprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_dprimme *rnorms, int nrb, int nre,
   dummy_type_dprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_dprimme *H, int nH, int ldH,
   primme_context ctx);
int restart_magma_zprimme(dummy_type_magma_zprimme *V, dummy_type_magma_zprimme *W, dummy_type_magma_zprimme *BV, PRIMME_INT nLocal,
      int basisSize, PRIMME_INT ldV, dummy_type_dprimme *hVals, dummy_type_dprimme *hSVals, int *flags,
      int *iev, int *ievSize, dummy_type_dprimme *blockNorms, dummy_type_magma_zprimme *evecs,
      PRIMME_INT ldevecs, dummy_type_magma_zprimme *Bevecs, PRIMME_INT ldBevecs, int *evecsPerm,
      dummy_type_dprimme *evals, dummy_type_dprimme *resNorms, dummy_type_magma_zprimme *evecsHat, PRIMME_INT ldevecsHat,
      dummy_type_zprimme *M, int ldM, dummy_type_zprimme *Mfact, int ldMfact, int *ipivot,
      int *numConverged, int *numLocked, int *lockedFlags,
      int *numConvergedStored, dummy_type_zprimme *prevhVecs, int nprevhVecs,
      int ldprevhVecs, int numGuesses, dummy_type_dprimme *prevRitzVals,
      int *numPrevRitzVals, dummy_type_zprimme *H, int ldH, dummy_type_zprimme *VtBV, int ldVtBV,
      dummy_type_magma_zprimme *Q, PRIMME_INT ldQ, dummy_type_zprimme *R, int ldR, dummy_type_zprimme *QtV, int ldQtV,
      dummy_type_zprimme *QtQ, int ldQtQ, dummy_type_zprimme *hU, int ldhU, int newldhU,
      dummy_type_zprimme *hVecs, int ldhVecs, int newldhVecs, int *restartSizeOutput,
      int *targetShiftIndex, int *numArbitraryVecs, dummy_type_zprimme *hVecsRot,
      int ldhVecsRot, int *restartsSinceReset, double startTime,
      primme_context ctx);
int Num_aux_update_VWXR_magma_zprimme(dummy_type_magma_zprimme *V, dummy_type_magma_zprimme *W, dummy_type_magma_zprimme *BV,
   PRIMME_INT mV, int nV, PRIMME_INT ldV,
   dummy_type_zprimme *h, int nh, int ldh, dummy_type_dprimme *hVals,
   dummy_type_magma_zprimme *X0, int nX0b, int nX0e, PRIMME_INT ldX0,
   dummy_type_magma_zprimme *X1, int nX1b, int nX1e, PRIMME_INT ldX1,
   dummy_type_magma_zprimme *evecs, int evecsSize, int nX2b, int nX2e, PRIMME_INT ldevecs,
   dummy_type_magma_zprimme *Wo, int nWob, int nWoe, PRIMME_INT ldWo,
   dummy_type_magma_zprimme *R, int nRb, int nRe, PRIMME_INT ldR, dummy_type_dprimme *Rnorms,
   dummy_type_magma_zprimme *BX0, int nBX0b, int nBX0e, PRIMME_INT ldBX0,
   dummy_type_magma_zprimme *BX1, int nBX1b, int nBX1e, PRIMME_INT ldBX1,
   dummy_type_magma_zprimme *Bevecs, int BevecsSize, int nBX2b, int nBX2e, PRIMME_INT ldBevecs,
   dummy_type_dprimme *rnorms, int nrb, int nre,
   dummy_type_zprimme *VtBV, int nVtBV, int ldVtBV,
   dummy_type_zprimme *H, int nH, int ldH,
   primme_context ctx);
#endif
